---
- name: Test Environment Provisioning
  hosts: test_environments
  remote_user: ec2-user
  become: true
  gather_facts: false

  tasks:
  
  - name: Wait until the instance is ready
    ansible.builtin.wait_for_connection:
    delay: 15
    timeout: 180
  
  - name: Gather facts for first time
    ansible.builtin.setup:

  - name: Required packages
    ansible.builtin.dnf:
      name:
      - https://s3.eu-west-2.amazonaws.com/amazon-ssm-eu-west-2/latest/linux_amd64/amazon-ssm-agent.rpm
      - podman
      state: present
      disable_gpg_check: true

  - name: Derived Image Containerfile
    ansible.builtin.template:
      src: ./templates/Containerfile.j2
      dest: /tmp/Containerfile

  - name: Login to default registry
    containers.podman.podman_login:
      username: "{{ registry_user }}"
      password: "{{ registry_password }}"
      registry: quay.io
      authfile: /etc/containers/auth.json

  - name: Build and the Derived Image
    async: 1000
    poll: 0
    register: build_result
    ansible.builtin.shell: |
      podman build -t derived_image:latest -f /tmp/Containerfile --authfile=/etc/containers/auth.json .

  - name: Check on Derived Image Build
    async_status:
      jid: "{{ build_result.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: 33
    delay: 30

  - name: Check images
    ansible.builtin.shell: |
      podman images -a

  # - name: Check images
  #   ansible.builtin.shell: |
  #     podman images --format='{{ '{{' }} .Repository {{ '}}' }} {{ '{{' }} .ID {{ '}}' }}' | grep "derived_images" | awk '{print $2}'



  # - name: Bootc Install
  #   async: 1000
  #   poll: 0
  #   register: build_result
  #   ansible.builtin.shell: |
  #     podman run --rm --privileged --pid=host --security-opt label=type:unconfined_t -v /:/target -v /var/lib/containers:/var/lib/containers derived_image:latest bootc install to-filesystem --karg=console=ttyS0,115200n8 --replace=alongside /target
  
  # - name: Check on Bootc Install
  #   async_status:
  #     jid: "{{ build_result.ansible_job_id }}"
  #   register: job_result
  #   until: job_result.finished
  #   retries: 100
  #   delay: 10

  # - name: Restart instance
  #   ansible.builtin.reboot:
  #     test_command: which ilab
